<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Common.UI.WPF.CustomControls">

    <local:TreeViewLineConverter x:Key="LineConverter" />

    <!-- 可视化树折叠展开的按钮样式 -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- 画折叠样式 -->
                        <Border x:Name="CollapsePath" Height="14" Width="10" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                            <!--<Rectangle x:Name="CollapsePath" Width="1" Height="5" Stroke="{TemplateBinding Background}" SnapsToDevicePixels="true"/>-->
                            <Path Data="M 0,0 8,7 0,14" Stretch="Fill"
                                  Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.5"
                                  Height="14" Width="8"
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Center"
                                  Margin="0,0,0,0">
                                <Path.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.LayoutTransform>
                            </Path>
                        </Border>
                        <!-- 画展开折叠样式 -->
                        <Border x:Name="ExpandPath" Height="10" Width="14" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Visibility="Collapsed">
                            <!--<Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="{TemplateBinding Background}" SnapsToDevicePixels="true"/>-->
                            <Path Data="M 0,0 8,7 0,14" Stretch="Fill"
                                  Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.5"
                                  Height="14" Width="8"
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Center"
                                  Margin="0,0,0,0">
                                <Path.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.LayoutTransform>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- 通过IsChecked判断折叠还是展开 -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="CollapsePath" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ExpandPath" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Foreground" Value="#FF565656" />
        <Setter Property="FontFamily" Value="FZLTZHUNHK" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="BorderThickness" Value="0" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" MinWidth="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="HorLn"
                            Height="1"
                            Margin="9,0,0,0"
                            SnapsToDevicePixels="True"
                            Stroke="#FF565656"
                            StrokeDashArray="3,5"
                            StrokeDashCap="Square"
                            StrokeDashOffset="1" />
                        <!--  Vertical line  -->
                        <Rectangle
                            x:Name="VerLn"
                            Grid.RowSpan="2"
                            Width="1"
                            Margin="0,0,1,0"
                            Fill="White"
                            SnapsToDevicePixels="true"
                            Stroke="#FF565656"
                            StrokeDashArray="3,5"
                            StrokeDashCap="Square" />
                        <ToggleButton
                            x:Name="Expander"
                            Grid.Row="0"
                            Grid.Column="0"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="1"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentSource="Header"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="#FF025BC7" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                        <!--  被选中后失去焦点  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#FF025BC7" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <!--  当前层最后一个元素不画下方垂直线  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="15" />
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <!--  Root第一个元素不显示上方垂直线  -->
                        <Trigger Property="TabIndex" Value="1">
                            <Setter TargetName="VerLn" Property="Margin" Value="0,12,1,0" />
                            <Setter TargetName="VerLn" Property="Height" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
                Value="False" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource CustomTreeViewItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"
                                            Margin="0" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Background="Transparent">
                        <ScrollViewer Focusable="False"
                                      CanContentScroll="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>